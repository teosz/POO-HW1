Starting audit...
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Combined.java:6:8: Unused import - java.util.Dictionary. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Combined.java:7:8: Unused import - java.util.Hashtable. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Combined.java:11:3: Class 'Combined' looks like designed for extension (can be subclassed), but the method 'reduce' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Combined' final or making the method 'reduce' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Combined.java:12:33: Parameter state should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:4:8: Unused import - loo.Actions. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:5:8: Unused import - loo.Hero. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:6:8: Unused import - loo.Point. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:9:8: Unused import - java.util.Dictionary. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:10:8: Unused import - java.util.Hashtable. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Attack.java:14:3: Class 'Attack' looks like designed for extension (can be subclassed), but the method 'reduce' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Attack' final or making the method 'reduce' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Map.java:10:8: Unused import - java.util.Hashtable. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/reducers/Map.java:14:3: Class 'Map' looks like designed for extension (can be subclassed), but the method 'reduce' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'reduce' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Hero.java:11:8: Parameter type should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Hero.java:11:21: Parameter baseHP should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Hero.java:11:33: Parameter levelupHP should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Hero.java:21:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:2:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:6:20: Parameter hero should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:6:31: Parameter position should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:11:3: Class 'StateCell' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StateCell' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:15:3: Class 'StateCell' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StateCell' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/StateCell.java:19:3: Class 'StateCell' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StateCell' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:11:8: Unused import - java.util.function.Function. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:13:15: Variable 'store' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:14:21: Variable 'heroFactory' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:15:15: Parameter n should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:15:22: Parameter m should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:20:3: Class 'Game' looks like designed for extension (can be subclassed), but the method 'addHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'addHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:20:23: Parameter heroSymbol should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:20:40: Parameter position should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:30:31: Parameter list should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:32:8: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:33:10: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:34:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:42:3: Class 'Game' looks like designed for extension (can be subclassed), but the method 'startRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'startRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:42:26: Parameter move should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:62:21: Variable 'hero' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Game.java:63:22: Variable 'position' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/JSONParsing.java:20:5: Class 'JSONParsing' looks like designed for extension (can be subclassed), but the method 'parseJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONParsing' final or making the method 'parseJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/HeroFactory.java:28: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/HeroFactory.java:28:11: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:10:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:14:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:18:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:19:27: Parameter obj should be final. [FinalParameters]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:20:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:20:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:27:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/loo/Point.java:32:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/main/Main.java:12:28: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/teosz/Courses/2/POO/HW1/statecontainer/Store.java:12:3: Class 'Store' looks like designed for extension (can be subclassed), but the method 'dispatch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Store' final or making the method 'dispatch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/statecontainer/Store.java:16:3: Class 'Store' looks like designed for extension (can be subclassed), but the method 'getState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Store' final or making the method 'getState' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/statecontainer/Action.java:3:8: Unused import - java.util.Hashtable. [UnusedImports]
[ERROR] /home/teosz/Courses/2/POO/HW1/statecontainer/Action.java:14:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/teosz/Courses/2/POO/HW1/statecontainer/Action.java:18:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPayload' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPayload' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 55 errors.
